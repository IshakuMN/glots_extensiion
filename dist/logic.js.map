{"version":3,"file":"logic.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AEhDA;AACA;AACA;AACA;AACA","sources":["webpack://glotsnext/./config/firebase.js","webpack://glotsnext/./src/logic.tsx","webpack://glotsnext/webpack/bootstrap","webpack://glotsnext/webpack/runtime/chunk loaded","webpack://glotsnext/webpack/runtime/define property getters","webpack://glotsnext/webpack/runtime/global","webpack://glotsnext/webpack/runtime/hasOwnProperty shorthand","webpack://glotsnext/webpack/runtime/make namespace object","webpack://glotsnext/webpack/runtime/jsonp chunk loading","webpack://glotsnext/webpack/before-startup","webpack://glotsnext/webpack/startup","webpack://glotsnext/webpack/after-startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDP6nHGO0EAaYlux0xZ8FnFkvYu3YVkyoI\", //process.env.FIREBASE_API,\n  authDomain: \"glota-2c318.firebaseapp.com\",\n  projectId: \"glota-2c318\",\n  storageBucket: \"glota-2c318.appspot.com\",\n  messagingSenderId: \"1036735424780\",\n  appId: \"1:1036735424780:web:1a0bea95a495eb68638129\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport default app;","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getFirestore, collection, addDoc, serverTimestamp, query, where, getDocs, } from 'firebase/firestore';\nimport app from '../config/firebase';\nconst db = getFirestore(app);\nconst searchTerms = [\"mean\", \"defin\", \"synonym\"];\nconst duration = Date.now() - 365 * 24 * 60 * 60 * 100; // One year ago\nsearchTerms.forEach(searchTerm => {\n    chrome.history.search({\n        text: searchTerm,\n        startTime: duration,\n        maxResults: 10,\n    }, function (data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            data.forEach(function (item) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    // Check if the URL is defined and contains \"mean\" or \"defin\"\n                    if (item && item.url && /mean|defin/i.test(item.url)) {\n                        // Extract the query string\n                        const queryMatch = item.url.match(/q=([^&]+)/);\n                        if (queryMatch) {\n                            const words = decodeURIComponent(queryMatch[1]).split('+');\n                            words.forEach((word, i) => __awaiter(this, void 0, void 0, function* () {\n                                if (/mean|defin/i.test(word)) {\n                                    // If there's a word before and it's not \"the\"\n                                    if (i > 0 && words[i - 1].toLowerCase() !== \"the\") {\n                                        yield addToDatabase(words[i - 1]);\n                                    }\n                                    // If there's a word after and it's not \"of\"\n                                    if (i < words.length - 1 && words[i + 1].toLowerCase() !== \"of\") {\n                                        yield addToDatabase(words[i + 1]);\n                                    }\n                                    // If the next word is \"of\", add the word after \"of\"\n                                    else if (i < words.length - 2 && words[i + 1].toLowerCase() === \"of\") {\n                                        yield addToDatabase(words[i + 2]);\n                                    }\n                                }\n                            }));\n                        }\n                    }\n                });\n            });\n        });\n    });\n});\nfunction addToDatabase(word) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const colRef = collection(db, 'words');\n        const lowercaseWord = word.trim().toLowerCase();\n        if (lowercaseWord.length > 0) {\n            // Check if the word already exists\n            const queryRef = query(colRef, where('word', '==', lowercaseWord));\n            const querySnapshot = yield getDocs(queryRef);\n            console.log(querySnapshot.size);\n            if (querySnapshot.size < 1) {\n                // Word doesn't exist, add it to the database\n                yield addDoc(colRef, {\n                    word: lowercaseWord,\n                    createdAt: serverTimestamp(),\n                });\n            }\n            else {\n            }\n        }\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"logic\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkglotsnext\"] = self[\"webpackChunkglotsnext\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_firebase_app_dist_esm_index_esm_js-node_modules_firebase_firestore_dist_-2b1f60\"], () => (__webpack_require__(\"./src/logic.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}